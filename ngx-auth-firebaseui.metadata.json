{"__symbolic":"module","version":4,"metadata":{"ɵa":{"enableFirestoreSync":true,"toastMessageOnAuthSuccess":true,"toastMessageOnAuthError":true,"authGuardFallbackURL":"/","authGuardLoggedInURL":"/","passwordMaxLength":60,"passwordMinLength":8,"nameMaxLength":50,"nameMinLength":2,"guardProtectedRoutesUntilEmailIsVerified":true},"ɵb":{"__symbolic":"function","parameters":["userProvidedConfig"],"value":{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"Object"},"member":"assign"},"arguments":[{},{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"userProvidedConfig"}]}},"NgxAuthFirebaseUIConfigToken":{"__symbolic":"new","expression":{"__symbolic":"reference","module":"@angular/core","name":"InjectionToken","line":73,"character":48},"arguments":["NgxAuthFirebaseUIConfigToken"]},"UserProvidedConfigToken":{"__symbolic":"new","expression":{"__symbolic":"reference","module":"@angular/core","name":"InjectionToken","line":75,"character":43},"arguments":["UserProvidedConfigToken"]},"NgxAuthFirebaseUIModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":77,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":79,"character":4},{"__symbolic":"reference","module":"@angular/router","name":"RouterModule","line":81,"character":4},{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClientModule","line":82,"character":4},{"__symbolic":"reference","module":"@angular/flex-layout","name":"FlexLayoutModule","line":84,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":86,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":87,"character":4},{"__symbolic":"reference","module":"@angular/material/tabs","name":"MatTabsModule","line":89,"character":4},{"__symbolic":"reference","module":"@angular/material/card","name":"MatCardModule","line":90,"character":4},{"__symbolic":"reference","module":"@angular/material/input","name":"MatInputModule","line":91,"character":4},{"__symbolic":"reference","module":"@angular/material/button","name":"MatButtonModule","line":92,"character":4},{"__symbolic":"reference","module":"@angular/material/icon","name":"MatIconModule","line":93,"character":4},{"__symbolic":"reference","module":"@angular/material/snack-bar","name":"MatSnackBarModule","line":94,"character":4},{"__symbolic":"reference","module":"@angular/material/divider","name":"MatDividerModule","line":95,"character":4},{"__symbolic":"reference","module":"@angular/material/chips","name":"MatChipsModule","line":96,"character":4},{"__symbolic":"reference","module":"@angular/material/tooltip","name":"MatTooltipModule","line":97,"character":4},{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialogModule","line":98,"character":4},{"__symbolic":"reference","module":"@angular/material/checkbox","name":"MatCheckboxModule","line":99,"character":4},{"__symbolic":"reference","module":"@angular/material/progress-spinner","name":"MatProgressSpinnerModule","line":100,"character":4},{"__symbolic":"reference","module":"@angular/material/progress-bar","name":"MatProgressBarModule","line":101,"character":4},{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialogModule","line":102,"character":4},{"__symbolic":"reference","module":"@angular/material/menu","name":"MatMenuModule","line":103,"character":4},{"__symbolic":"reference","module":"@angular-material-extensions/password-strength","name":"MatPasswordStrengthModule","line":105,"character":4},{"__symbolic":"reference","module":"@angular/fire/auth","name":"AngularFireAuthModule","line":107,"character":4},{"__symbolic":"reference","module":"@angular/fire/firestore","name":"AngularFirestoreModule","line":108,"character":4}],"exports":[{"__symbolic":"reference","name":"AuthComponent"},{"__symbolic":"reference","name":"UserComponent"},{"__symbolic":"reference","name":"NgxAuthFirebaseuiAvatarComponent"},{"__symbolic":"reference","name":"AuthProvidersComponent"},{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","module":"@angular/fire/auth","name":"AngularFireAuthModule","line":117,"character":4},{"__symbolic":"reference","module":"@angular/fire/firestore","name":"AngularFirestoreModule","line":118,"character":4},{"__symbolic":"reference","name":"NgxAuthFirebaseuiLoginComponent"},{"__symbolic":"reference","name":"NgxAuthFirebaseuiRegisterComponent"}],"declarations":[{"__symbolic":"reference","name":"AuthComponent"},{"__symbolic":"reference","name":"UserComponent"},{"__symbolic":"reference","name":"NgxAuthFirebaseuiAvatarComponent"},{"__symbolic":"reference","name":"AuthProvidersComponent"},{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"LegalityDialogComponent"},{"__symbolic":"reference","name":"NgxAuthFirebaseuiLoginComponent"},{"__symbolic":"reference","name":"NgxAuthFirebaseuiRegisterComponent"}],"entryComponents":[{"__symbolic":"reference","name":"UserComponent"},{"__symbolic":"reference","name":"LegalityDialogComponent"}]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/material/icon","name":"MatIconRegistry","line":168,"character":37},{"__symbolic":"reference","module":"@angular/platform-browser","name":"DomSanitizer","line":168,"character":74},{"__symbolic":"reference","name":"AuthProcessService"}]}],"registerProviderIcons":[{"__symbolic":"method"}]},"statics":{"forRoot":{"__symbolic":"function","parameters":["configFactory","appNameFactory","config"],"defaults":[null,{"__symbolic":"error","message":"Lambda not supported","line":140,"character":47,"module":"./module/ngx-auth-firebase-u-i.module"},{}],"value":{"ngModule":{"__symbolic":"reference","name":"NgxAuthFirebaseUIModule"},"providers":[{"provide":{"__symbolic":"reference","module":"@angular/fire","name":"FirebaseOptionsToken","line":148,"character":21},"useValue":{"__symbolic":"reference","name":"configFactory"}},{"provide":{"__symbolic":"reference","module":"@angular/fire","name":"FirebaseNameOrConfigToken","line":152,"character":21},"useFactory":{"__symbolic":"reference","name":"appNameFactory"}},{"provide":{"__symbolic":"reference","name":"UserProvidedConfigToken"},"useValue":{"__symbolic":"reference","name":"config"}},{"provide":{"__symbolic":"reference","name":"NgxAuthFirebaseUIConfigToken"},"useFactory":{"__symbolic":"reference","name":"ɵb"},"deps":[{"__symbolic":"reference","name":"UserProvidedConfigToken"}]},{"__symbolic":"reference","name":"AuthProcessService"},{"__symbolic":"reference","name":"FirestoreSyncService"},{"__symbolic":"reference","name":"LoggedInGuard"}]}}}},"LegalityDialogComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"ngx-auth-firebaseui-legality-dialog","template":"\n    <h1 matDialogTitle>Legal requirements</h1>\n\n    <mat-dialog-content>\n      <div fxLayout=\"column\" fxLayoutAlign=\"start\">\n        <mat-checkbox *ngIf=\"this.data.tosUrl\" [(ngModel)]=\"checkTOS\">\n          I agree to the\n          <span>&nbsp;</span>\n          <a target=\"_blank\"\n             [href]=\"this.data.tosUrl\">\n            Terms of Service and Conditions\n          </a>\n        </mat-checkbox>\n\n        <mat-checkbox *ngIf=\"this.data.privacyPolicyUrl\"\n                      [(ngModel)]=\"checkPrivacyPolicy\">\n          I have read and agree to the\n          <span>&nbsp;</span>\n          <a target=\"_blank\"\n             [href]=\"this.data.privacyPolicyUrl\">\n            Privacy\n          </a>\n        </mat-checkbox>\n      </div>\n    </mat-dialog-content>\n\n    <mat-dialog-actions>\n      <button id=\"decline-action\"\n              mat-raised-button\n              matDialogClose\n              color=\"warn\">Decline</button>\n      <button id=\"confirm-action\"\n              mat-raised-button\n              color=\"primary\"\n              [disabled]=\"disableConfirmActionButton\"\n              (click)=\"closeDialog()\">Confirm\n      </button>\n    </mat-dialog-actions>\n  ","styles":["\n    ::ng-deep .mat-checkbox-label{display:-webkit-box;display:flex;flex-wrap:wrap}mat-dialog-content div{margin-top:1.5rem}mat-dialog-actions{margin-top:1rem}\n  "]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":56,"character":15},"arguments":[{"__symbolic":"reference","module":"@angular/material","name":"MAT_DIALOG_DATA","line":56,"character":22}]}]],"parameters":[{"__symbolic":"reference","name":"MatDialogRef","module":"@angular/material","arguments":[{"__symbolic":"reference","name":"LegalityDialogComponent"}]},{"__symbolic":"reference","name":"ɵe"}]}],"closeDialog":[{"__symbolic":"method"}]}},"LinkMenuItem":{"__symbolic":"interface"},"NgxAuthFirebaseuiAvatarComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":13,"character":1},"arguments":[{"selector":"ngx-auth-firebaseui-avatar","template":"\n    <button *ngIf=\"user\"\n            mat-mini-fab\n            [matMenuTriggerFor]=\"posXMenu\"\n            aria-label=\"Open x-positioned menu\"\n            [style.background-image]=\"'url(' + user?.photoURL + ')'\"\n            style=\"background-size: cover\"\n            [matTooltip]=\"user?.displayName\">\n      <span *ngIf=\"!user?.photoURL\">{{displayNameInitials || ''}}</span>\n    </button>\n\n    <mat-menu xPosition=\"before\" #posXMenu=\"matMenu\" class=\"before\">\n      <div fxLayout=\"row\" fxLayout.xs=\"column\" style=\"padding-left: 10px; padding-right: 10px\">\n        <button mat-fab\n                [style.background-image]=\"'url(' + user?.photoURL + ')'\"\n                style=\"background-size: cover\">\n          <span *ngIf=\"!user?.photoURL\">{{displayNameInitials || ''}}</span>\n        </button>\n        <div fxLayout=\"column\" style=\"padding-left: 10px; padding-right: 10px\">\n          <strong mat-card-title>{{user?.displayName}}</strong>\n          <em mat-card-subtitle style=\"font-style: italic\">{{user?.email}}</em>\n        </div>\n      </div>\n\n      <div fxLayout=\"column\" fxFlex=\"100\">\n        <div class=\"links-menu\" *ngFor=\"let menuItem of links\">\n          <button mat-menu-item (click)=\"menuItem?.callback()\">\n            <mat-icon>{{menuItem?.icon}}</mat-icon>{{menuItem?.text}}</button>\n        </div>\n        <button mat-raised-button fxLayoutAlign=\"center\" color=\"primary\" (click)=\"openProfile()\">Profile\n        </button>\n        <button *ngIf=\"canLogout\" mat-raised-button fxLayoutAlign=\"center\" color=\"warn\" (click)=\"signOut()\">Sign Out\n        </button>\n      </div>\n    </mat-menu>\n  ","styles":["\n    .mat-raised-button{margin:.2rem 1rem}.links-menu{text-align:center}\n  "]}]}],"members":{"canLogout":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":57,"character":3}}]}],"links":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":60,"character":3}}]}],"onSignOut":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":63,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/fire/auth","name":"AngularFireAuth","line":70,"character":26},{"__symbolic":"reference","module":"@angular/material","name":"MatDialog","line":71,"character":29}]}],"ngOnInit":[{"__symbolic":"method"}],"getDisplayNameInitials":[{"__symbolic":"method"}],"openProfile":[{"__symbolic":"method"}],"signOut":[{"__symbolic":"method"}]}},"UserComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":10,"character":1},"arguments":[{"selector":"ngx-auth-firebaseui-user","template":"\n    <div *ngIf=\"auth.authState| async as user; then authenticated else none\">\n\n    </div>\n\n    <ng-template #authenticated>\n      <mat-card *ngIf=\"auth.user | async as user\">\n        <!--<form [formGroup]=\"updateFormGroup\" >-->\n        <!--card header-->\n        <mat-card-header fxLayout=\"column\" fxLayoutAlign=\"center center\">\n\n          <img mat-card-avatar [src]=\"authProcess?.getUserPhotoUrl()\">\n\n          <div *ngIf=\"user.emailVerified; then emailVerified else emailNotVerified\"></div>\n          <ng-template #emailVerified>\n            <mat-icon color=\"primary\"\n                      matTooltip=\"email is verified\"\n                      matTooltipPosition=\"after\">\n              verified_user\n            </mat-icon>\n          </ng-template>\n          <ng-template #emailNotVerified>\n            <mat-icon color=\"warn\"\n                      matTooltip=\"email is not verified\"\n                      matTooltipPosition=\"after\">\n              warning\n            </mat-icon>\n          </ng-template>\n\n        </mat-card-header>\n\n        <!--card content-->\n        <mat-card-content *ngIf=\"editMode; then edit else readonly\">\n        </mat-card-content>\n\n        <ng-template #edit>\n          <form [formGroup]=\"updateFormGroup\" (submit)=\"save()\">\n\n            <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"center center\">\n              <div fxLayoutAlign=\"center\">\n                <button mat-raised-button color=\"warn\" class=\"edit-button\"\n                        (click)=\"changeEditMode()\">\n                  cancel\n                </button>\n              </div>\n\n              <!--name-->\n              <mat-form-field class=\"full-width\" [appearance]=\"appearance\">\n                <mat-label>Name</mat-label>\n                <input matInput\n                       placeholder=\"Name\"\n                       [formControl]=\"updateNameFormControl\">\n                <mat-icon matSuffix>person</mat-icon>\n                <mat-hint align=\"end\" aria-live=\"polite\"> {{ updateNameFormControl.value?.length }} / {{ config.nameMaxLength }} </mat-hint>\n                <mat-error *ngIf=\"updateNameFormControl.hasError('required')\">\n                  Name is required\n                </mat-error>\n              </mat-form-field>\n\n              <!--email-->\n              <mat-form-field class=\"full-width\" [appearance]=\"appearance\">\n                <mat-label>E-mail</mat-label>\n                <input matInput\n                       placeholder=\"E-mail\"\n                       [formControl]=\"updateEmailFormControl\">\n                <mat-icon matSuffix>email</mat-icon>\n                <mat-error *ngIf=\"updateEmailFormControl.hasError('required')\">\n                  E-mail is required {{updateEmailFormControl.value}}\n                </mat-error>\n                <mat-error *ngIf=\"updateEmailFormControl.hasError('pattern')\">\n                  Please enter a valid e-mail address {{updateEmailFormControl.value}}\n                </mat-error>\n              </mat-form-field>\n\n              <!--phone number-->\n              <mat-form-field class=\"full-width\" [appearance]=\"appearance\">\n                <mat-label>Phone number</mat-label>\n                <input matInput\n                       type=\"number\"\n                       placeholder=\"Phone number\"\n                       [formControl]=\"updatePhoneNumberFormControl\">\n                <mat-icon matSuffix>phone</mat-icon>\n                <mat-hint align=\"end\" aria-live=\"polite\">\n                  The phone number is international. Therefore, it should start with a + sign or 00,\n                  followed by the country code, - and national number e.g: +49-12345678 or 0041-1234567890\n\n                  NOTE : the phone number must be a valid phone credential !!\n                </mat-hint>\n                <mat-error *ngIf=\"updatePhoneNumberFormControl.hasError('pattern')\">\n                  Please enter a valid phone number\n                </mat-error>\n              </mat-form-field>\n\n            </mat-card-content>\n\n            <mat-card-actions fxLayout=\"column\">\n              <button mat-button\n                      color=\"primary\"\n                      type=\"submit\">\n                Save changes\n              </button>\n            </mat-card-actions>\n          </form>\n        </ng-template>\n\n        <ng-template #readonly>\n          <div fxLayoutAlign=\"center\">\n            <button mat-raised-button color=\"primary\" class=\"edit-button\"\n                    (click)=\"changeEditMode()\">\n              edit\n            </button>\n          </div>\n\n          <!--name-->\n          <mat-form-field class=\"full-width\" [appearance]=\"appearance\">\n            <mat-label>Name</mat-label>\n            <input matInput\n                   placeholder=\"Name\"\n                   [value]=\"user.displayName\"\n                   [disabled]=\"!editMode\">\n            <mat-icon matSuffix color=\"primary\">person</mat-icon>\n          </mat-form-field>\n\n          <!--email-->\n          <mat-form-field class=\"full-width\" [appearance]=\"appearance\">\n            <mat-label>E-mail</mat-label>\n            <input matInput\n                   placeholder=\"E-mail\" [value]=\"user.email\"\n                   [disabled]=\"!editMode\">\n            <mat-icon matSuffix color=\"primary\">email</mat-icon>\n          </mat-form-field>\n\n          <!--phone number-->\n          <mat-form-field class=\"full-width\" [appearance]=\"appearance\">\n            <mat-label>Phone number</mat-label>\n            <input matInput\n                   placeholder=\"Phone number\"\n                   [value]=\"user.phoneNumber\"\n                   [disabled]=\"!editMode\">\n            <mat-icon matSuffix color=\"primary\">phone</mat-icon>\n          </mat-form-field>\n\n          <mat-card-actions fxLayout=\"column\">\n            <button *ngIf=\"canLogout\" mat-button color=\"primary\" (click)=\"signOut()\">Sign out</button>\n            <button *ngIf=\"canDeleteAccount\" mat-button color=\"warn\" (click)=\"deleteAccount()\">Delete account</button>\n          </mat-card-actions>\n\n        </ng-template>\n\n      </mat-card>\n\n    </ng-template>\n\n\n    <ng-template #none>\n      <mat-card class=\"none-card\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n        <mat-card-content fxLayout=\"row\" fxLayoutAlign=\"center center\">\n          <mat-icon color=\"accent\">warning</mat-icon>\n          <span>You are not logged in!</span>\n        </mat-card-content>\n      </mat-card>\n    </ng-template>\n  ","styles":["\n    .edit-button{margin:1rem}.full-width{width:100%}.cut-text{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.none-card{min-height:430px}.none-card span{font-size:24px;text-align:center;color:rgba(0,0,0,.54)}\n  "]}]}],"members":{"editMode":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":181,"character":3}}]}],"canLogout":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":184,"character":3}}]}],"canEditAccount":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":187,"character":3}}]}],"canDeleteAccount":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":190,"character":3}}]}],"appearance":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":193,"character":3}}]}],"onSignOut":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":196,"character":3}}]}],"onAccountEdited":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":199,"character":3}}]}],"onAccountDeleted":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":202,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,null,null,null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":216,"character":5},"arguments":[{"__symbolic":"reference","name":"NgxAuthFirebaseUIConfigToken"}]}]],"parameters":[{"__symbolic":"reference","module":"@angular/fire/auth","name":"AngularFireAuth","line":212,"character":17},{"__symbolic":"reference","name":"AuthProcessService"},{"__symbolic":"reference","name":"FirestoreSyncService"},{"__symbolic":"reference","module":"@angular/material","name":"MatSnackBar","line":215,"character":22},{"__symbolic":"reference","name":"NgxAuthFirebaseUIConfig"}]}],"initUpdateFormGroup":[{"__symbolic":"method"}],"changeEditMode":[{"__symbolic":"method"}],"reset":[{"__symbolic":"method"}],"save":[{"__symbolic":"method"}],"signOut":[{"__symbolic":"method"}],"deleteAccount":[{"__symbolic":"method"}]}},"AuthComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":40,"character":1},"arguments":[{"selector":"ngx-auth-firebaseui","template":"\n    <ng-container *ngIf=\"authProcess.user$ | async as user; else showForm\">\n\n      <!-- This component will be shown when:\n        - we just sent a verification mail (notably after sign up)\n        - we arrived from the guard after trying to access a protected route even though we are connected\n      -->\n      <div *ngIf=\"(config.guardProtectedRoutesUntilEmailIsVerified && !user.emailVerified) || (authProcess.emailConfirmationSent && !user.emailVerified); else signedInUser\"\n           fxLayout=\"row\" fxLayoutAlign=\"center center\">\n          <ngx-auth-firebaseui-email-confirmation\n            [template]=\"verifyEmailTemplate\"\n            [email]=\"user.email\"\n            [goBackURL]=\"goBackURL\"\n            [verifyEmailTitleText]=\"verifyEmailTitleText\"\n            [verifyEmailConfirmationText]=\"verifyEmailConfirmationText\"\n            [verifyEmailGoBackText]=\"verifyEmailGoBackText\"\n            [sendNewVerificationEmailText]=\"sendNewVerificationEmailText\"\n            [signOutText]=\"signOutText\"\n            [messageOnEmailConfirmationSuccess]=\"messageOnEmailConfirmationSuccess\"\n            (signOut)=\"signOut()\">\n        </ngx-auth-firebaseui-email-confirmation>\n      </div>\n\n      <ng-template #signedInUser>\n          <div class=\"signed-in-container\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n            <img class=\"account-circle\" *ngIf=\"user.photoURL; else noPhoto\" [src]=\"user.photoURL\">\n            <ng-template #noPhoto><mat-icon class=\"account-circle\">account_circle</mat-icon></ng-template>\n            <div class=\"user-display-name mat-title\">{{ user.displayName }}</div>\n            <div class=\"user-email mat-body-2\">{{ user.email }}</div>\n            <div class=\"actions\">\n              <mat-progress-bar *ngIf=\"isLoading\" mode=\"indeterminate\"></mat-progress-bar>\n              <a mat-stroked-button class=\"go-back-button action-button\" color=\"primary\" [routerLink]=\"goBackURL\">{{ verifyEmailGoBackText }}</a>\n              <button mat-stroked-button class=\"sign-out-button action-button\" color=\"warn\" (click)=\"signOut()\">{{ signOutText }}</button>\n            </div>\n          </div>\n      </ng-template>\n\n    </ng-container>\n\n    <ng-template #showForm>\n      <mat-tab-group [color]=\"color\" [selectedIndex]=\"tabIndex\" (selectedTabChange)=\"onTabChange($event)\">\n        <!--Sign in tab-->\n        <mat-tab [label]=\"signInTabText\">\n          <mat-card>\n            <mat-card-title>{{signInCardTitleText}}</mat-card-title>\n            <mat-card-content>\n              <form  [@animateStagger]=\"{ value: '50' }\"\n                     [formGroup]=\"signInFormGroup\"\n                    (ngSubmit)=\"signIn()\">\n                <div fxLayout=\"column\" fxLayoutAlign=\"center\">\n                  <mat-form-field [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n                                  [appearance]=\"appearance\">\n                    <mat-label>{{emailText}}</mat-label>\n                    <input matInput\n                          formControlName=\"email\"\n                          required>\n                    <mat-icon matSuffix [color]=\"color\">email</mat-icon>\n                    <mat-error *ngIf=\"signInEmailFormControl.hasError('required')\">\n                      {{emailErrorRequiredText}}\n                    </mat-error>\n                    <mat-error *ngIf=\"signInEmailFormControl.hasError('pattern')\">\n                      {{emailErrorPatternText}}\n                    </mat-error>\n                  </mat-form-field>\n\n                  <mat-form-field [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n                                [appearance]=\"appearance\">\n                    <mat-label>{{passwordText}}</mat-label>\n                    <input matInput [type]=\"togglePass.type\" [minlength]=\"min\" [maxlength]=\"max\" formControlName=\"password\"\n                          required/>\n                    <mat-pass-toggle-visibility #togglePass matSuffix></mat-pass-toggle-visibility>\n                    <mat-icon matSuffix [color]=\"color\">lock</mat-icon>\n                    <mat-hint align=\"end\" aria-live=\"polite\"> {{ signInFormGroup.value.password.length }}\n                      / {{ max }} </mat-hint>\n                    <mat-error *ngIf=\"sigInPasswordFormControl.hasError('required')\">\n                      {{passwordErrorRequiredText}}\n                    </mat-error>\n                    <mat-error *ngIf=\"sigInPasswordFormControl.hasError('minlength')\">\n                      {{ passwordErrorMinLengthText }}\n                    </mat-error>\n                    <mat-error *ngIf=\"sigInPasswordFormControl.hasError('maxlength')\">\n                      {{ passwordErrorMaxLengthText }}\n                    </mat-error>\n                  </mat-form-field>\n\n                  <button [@animate]=\"{ value: '*', params: { x: '50px' } }\"\n                        mat-raised-button\n                          style=\"margin-top: 20px\"\n                          type=\"submit\"\n                          class=\"space-top\"\n                          [color]=\"color\"\n                          [disabled]=\"signInFormGroup.invalid\">\n                    {{loginButtonText}}\n                  </button>\n\n                </div>\n              </form>\n\n              <div fxLayoutAlign=\"center\">\n                <button *ngIf=\"resetPasswordEnabled\"\n                        [@animate]=\"{ value: '*', params: { x: '-50px' } }\"\n                      mat-button\n                      class=\"space-top\"\n                      [color]=\"color\"\n                      (click)=\"createForgotPasswordTab()\">\n                {{forgotPasswordButtonText}}\n              </button>\n            </div>\n\n            </mat-card-content>\n            <mat-card-footer *ngIf=\"isLoading\">\n              <mat-progress-bar [@animate]=\"{ value: '*', params: { z: '50px', delay: '50ms', scale: '0.2' } }\"\n                              mode=\"indeterminate\"></mat-progress-bar>\n            </mat-card-footer>\n          </mat-card>\n        </mat-tab>\n\n        <!--tab register-->\n        <mat-tab [label]=\"registerTabText\" *ngIf=\"registrationEnabled\">\n          <mat-card>\n            <mat-card-title>{{registerCardTitleText}}</mat-card-title>\n              <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"center\">\n                <form [@animateStagger]=\"{ value: '50' }\"\n                    [formGroup]=\"signUpFormGroup\" (ngSubmit)=\"signUpFormGroup.valid &&\n                processLegalSignUP(authProvider.EmailAndPassword)\">\n                  <div fxLayout=\"column\" fxLayoutAlign=\"center\">\n                    <!--name-->\n                    <mat-form-field [@animate]=\"{ value: '*', params: { x: '50px' } }\"\n                                  [appearance]=\"appearance\">\n                      <!--labels will work only with @angular/material@6.2.0 -->\n                      <mat-label>{{nameText}}</mat-label>\n                      <input\n                        matInput\n                        [minlength]=\"config.nameMinLength\"\n                        [maxlength]=\"config.nameMaxLength\"\n                        [formControl]=\"sigUpNameFormControl\"\n                        required\n                      />\n                      <mat-icon matSuffix [color]=\"color\">person</mat-icon>\n                      <mat-hint align=\"end\" aria-live=\"polite\"> {{ signUpFormGroup.value.name?.length }}\n                        / {{ config.nameMaxLength }} </mat-hint>\n                      <mat-error *ngIf=\"sigUpNameFormControl.hasError('required')\">\n                        {{nameErrorRequiredText}}\n                      </mat-error>\n                      <mat-error *ngIf=\"sigUpNameFormControl.hasError('minlength')\">\n                        {{nameErrorMinLengthText}}\n                      </mat-error>\n                      <mat-error *ngIf=\"sigUpNameFormControl.hasError('maxlength')\">\n                        {{nameErrorMaxLengthText}}\n                      </mat-error>\n                    </mat-form-field>\n\n                    <!--email-->\n                    <mat-form-field [@animate]=\"{ value: '*', params: { x: '50px' } }\"\n                                  [appearance]=\"appearance\">\n                      <mat-label>{{emailText}}</mat-label>\n                      <input matInput\n                            type=\"email\"\n                            [formControl]=\"sigUpEmailFormControl\"\n                            required>\n                      <mat-icon matSuffix [color]=\"color\">email</mat-icon>\n                      <mat-error *ngIf=\"sigUpEmailFormControl.hasError('required')\">\n                        {{emailErrorRequiredText}}\n                      </mat-error>\n                      <mat-error *ngIf=\"sigUpEmailFormControl.hasError('pattern')\">\n                        {{emailErrorPatternText}}\n                      </mat-error>\n                    </mat-form-field>\n\n                    <!--password-->\n                    <div fxLayout=\"column\">\n                      <mat-form-field [@animate]=\"{ value: '*', params: { x: '50px' } }\"\n                                    [appearance]=\"appearance\">\n                        <mat-label>{{passwordText}}</mat-label>\n                        <input\n                          matInput\n                          [type]=\"toggle.type\"\n                          name=\"password\"\n                          [formControl]=\"sigUpPasswordFormControl\"\n                          required\n                          [minlength]=\"min\"\n                          [maxlength]=\"max\"\n                        />\n                        <mat-pass-toggle-visibility #toggle matSuffix></mat-pass-toggle-visibility>\n\n                        <mat-icon matSuffix [color]=\"color\">lock</mat-icon>\n\n                        <mat-hint align=\"end\" aria-live=\"polite\">\n                          {{signUpFormGroup.value.password?.length}} / {{ max }}\n                        </mat-hint>\n\n                        <mat-error *ngIf=\"sigUpPasswordFormControl.hasError('required')\" class=\"cut-text\">\n                          {{passwordErrorRequiredText}}\n                        </mat-error>\n\n                        <mat-error *ngIf=\"sigUpPasswordFormControl.hasError('minlength')\" class=\"cut-text\">\n                          {{ passwordErrorMinLengthText }}\n                        </mat-error>\n                        <mat-error *ngIf=\"sigUpPasswordFormControl.hasError('maxlength')\" class=\"cut-text\">\n                          {{ passwordErrorMaxLengthText }}\n                        </mat-error>\n\n                      </mat-form-field>\n\n                      <mat-password-strength #passwordStrength\n                                            [min]=\"min\"\n                                            [max]=\"max\"\n                                            [customValidator]=\"customValidator\"\n                                            [enableLengthRule]=\"enableLengthRule\"\n                                            [enableLowerCaseLetterRule]=\"enableLowerCaseLetterRule\"\n                                            [enableUpperCaseLetterRule]=\"enableUpperCaseLetterRule\"\n                                            [enableDigitRule]=\"enableDigitRule\"\n                                            [enableSpecialCharRule]=\"enableSpecialCharRule\"\n                                            [password]=\"signUpFormGroup.value.password\"\n                                            [externalError]=\"sigUpPasswordFormControl.dirty\">\n                      </mat-password-strength>\n\n                    </div>\n\n                    <button [@animate]=\"{ value: '*', params: { x: '100px' } }\"\n                          mat-raised-button\n                            style=\"margin-top: 20px\"\n                            type=\"submit\"\n                            [disabled]=\"signUpFormGroup.invalid\"\n                            [color]=\"color\">\n                      {{registerButtonText}}\n                    </button>\n\n                  </div>\n                </form>\n\n                <button *ngIf=\"guestEnabled\"\n                        [@animate]=\"{ value: '*', params: { x: '-100px' } }\"\n                      mat-button\n                      style=\"margin-top: 20px\"\n                      [color]=\"color\"\n                      (click)=\"processLegalSignUP(authProvider.ANONYMOUS)\">\n                <mat-icon>fingerprint</mat-icon>\n                {{guestButtonText}}\n              </button>\n\n              </mat-card-content>\n\n              <mat-card-footer *ngIf=\"isLoading\">\n                <mat-progress-bar [@animate]=\"{ value: '*', params: { z: '50px', delay: '50ms', scale: '0.2' } }\"\n                                mode=\"indeterminate\"></mat-progress-bar>\n              </mat-card-footer>\n\n          </mat-card>\n        </mat-tab>\n\n        <!--Reset password tab-->\n        <mat-tab *ngIf=\"passwordResetWished\" class=\"reset-password-tab\">\n          <ng-template mat-tab-label>\n            <button mat-icon-button class=\"reset-password-tab__close-button\" (click)=\"passwordResetWished = false\">\n              {{ resetPasswordTabText }}\n              <mat-icon>close</mat-icon>\n            </button>\n          </ng-template>\n          <form [@animateStagger]=\"{ value: '50' }\"\n                [formGroup]=\"resetPasswordFormGroup\"\n                (ngSubmit)=\"resetPasswordFormGroup.valid && resetPassword()\">\n            <mat-card class=\"reset-password-card\">\n              <mat-card-content>\n                <mat-form-field [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\" class=\"full-width\"\n                                [appearance]=\"appearance\">\n                  <mat-label> {{ resetPasswordInputText }} </mat-label>\n                  <input matInput\n                        [title]=\"resetPasswordInputText\"\n                        formControlName=\"email\"\n                        required>\n                  <mat-icon matSuffix [color]=\"color\">email</mat-icon>\n                  <mat-error *ngIf=\"resetPasswordEmailFormControl.hasError('required')\">\n                    {{resetPasswordErrorRequiredText}}\n                  </mat-error>\n                  <mat-error *ngIf=\"resetPasswordEmailFormControl.hasError('pattern')\">\n                    {{resetPasswordErrorPatternText}}\n                  </mat-error>\n                </mat-form-field>\n                <p *ngIf=\"passReset\">{{resetPasswordInstructionsText}}</p>\n              </mat-card-content>\n              <mat-card-actions fxLayoutAlign=\"center\">\n                <mat-progress-bar *ngIf=\"isLoading\" mode=\"indeterminate\"></mat-progress-bar>\n                <button [@animate]=\"{ value: '*', params: { x: '50px' } }\"\n                        mat-raised-button\n                        type=\"submit\"\n                        [color]=\"color\">\n                  {{resetPasswordActionButtonText}}\n                </button>\n              </mat-card-actions>\n            </mat-card>\n          </form>\n        </mat-tab>\n\n      </mat-tab-group>\n      <mat-divider></mat-divider>\n      <ngx-auth-firebaseui-providers *ngIf=\"tabIndex !== 2\"\n                                     [providers]=\"providers\"\n                                     [theme]=\"providersTheme\">\n      </ngx-auth-firebaseui-providers>\n    </ng-template>\n  ","styles":["\n    .mat-card{margin:2rem}.space-top{margin-top:.5rem}.full-width{width:100%}.cut-text{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.signed-in-container .account-circle{font-size:12rem;width:12rem;height:12rem}.signed-in-container img.account-circle{-o-object-fit:cover;object-fit:cover;border-radius:50%}.signed-in-container .sign-out-button{margin-top:2rem}.signed-in-container .user-display-name{margin-top:1rem}.signed-in-container .user-email{margin-top:-1rem}.signed-in-container .actions{margin-top:2rem}.signed-in-container .actions .action-button,.signed-in-container .actions mat-progress-bar{width:100%}.signed-in-container .actions .action-button{margin-top:1rem}.reset-password-tab mat-progress-bar{margin-bottom:1rem}.reset-password-tab__close-button{width:100%;display:-webkit-box;display:flex;-webkit-box-pack:justify;justify-content:space-between;-webkit-box-align:center;align-items:center}.reset-password-tab__close-button mat-icon{font-size:18px;position:relative;top:-1px}\n  "],"animations":{"__symbolic":"reference","name":"ɵc"},"changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":348,"character":19},"member":"OnPush"}}]}],"members":{"matTabGroup":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":352,"character":3},"arguments":[{"__symbolic":"reference","module":"@angular/material","name":"MatTabGroup","line":352,"character":13},{"static":false}]}]}],"passwordStrength":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":353,"character":3},"arguments":[{"__symbolic":"reference","module":"@angular-material-extensions/password-strength","name":"MatPasswordStrengthComponent","line":353,"character":13},{"static":false}]}]}],"providers":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":357,"character":3}}]}],"providersTheme":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":358,"character":3}}]}],"appearance":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":360,"character":3}}]}],"tabIndex":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":361,"character":3}}]}],"registrationEnabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":362,"character":3}}]}],"resetPasswordEnabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":363,"character":3}}]}],"guestEnabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":364,"character":3}}]}],"tosUrl":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":365,"character":3}}]}],"privacyPolicyUrl":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":366,"character":3}}]}],"goBackURL":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":367,"character":3}}]}],"messageOnAuthSuccess":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":368,"character":3}}]}],"messageOnAuthError":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":369,"character":3}}]}],"messageOnEmailConfirmationSuccess":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":370,"character":3}}]}],"onSuccess":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":373,"character":3}}]}],"onError":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":374,"character":3}}]}],"selectedTabChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":375,"character":3}}]}],"enableLengthRule":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":378,"character":3}}]}],"enableLowerCaseLetterRule":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":379,"character":3}}]}],"enableUpperCaseLetterRule":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":380,"character":3}}]}],"enableDigitRule":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":381,"character":3}}]}],"enableSpecialCharRule":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":382,"character":3}}]}],"min":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":383,"character":3}}]}],"max":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":384,"character":3}}]}],"customValidator":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":385,"character":3}}]}],"onStrengthChanged":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":386,"character":3}}]}],"verifyEmailTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":390,"character":3}}]}],"verifyEmailTitleText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":394,"character":3}}]}],"verifyEmailConfirmationText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":395,"character":3}}]}],"verifyEmailGoBackText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":396,"character":3}}]}],"sendNewVerificationEmailText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":397,"character":3}}]}],"signOutText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":398,"character":3}}]}],"resetPasswordTabText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":402,"character":3}}]}],"resetPasswordInputText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":403,"character":3}}]}],"resetPasswordErrorRequiredText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":404,"character":3}}]}],"resetPasswordErrorPatternText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":405,"character":3}}]}],"resetPasswordActionButtonText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":406,"character":3}}]}],"resetPasswordInstructionsText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":407,"character":3}}]}],"signInTabText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":410,"character":3}}]}],"signInCardTitleText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":411,"character":3}}]}],"loginButtonText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":412,"character":3}}]}],"forgotPasswordButtonText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":413,"character":3}}]}],"nameText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":416,"character":3}}]}],"nameErrorRequiredText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":417,"character":3}}]}],"nameErrorMinLengthText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":418,"character":3}}]}],"nameErrorMaxLengthText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":419,"character":3}}]}],"emailText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":421,"character":3}}]}],"emailErrorRequiredText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":422,"character":3}}]}],"emailErrorPatternText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":423,"character":3}}]}],"passwordText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":425,"character":3}}]}],"passwordErrorRequiredText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":426,"character":3}}]}],"passwordErrorMinLengthText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":427,"character":3}}]}],"passwordErrorMaxLengthText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":428,"character":3}}]}],"registerTabText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":431,"character":3}}]}],"registerCardTitleText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":432,"character":3}}]}],"registerButtonText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":433,"character":3}}]}],"guestButtonText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":434,"character":3}}]}],"emailConfirmationTitle":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":437,"character":3}}]}],"emailConfirmationText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":438,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":465,"character":5},"arguments":[{"__symbolic":"reference","module":"@angular/core","name":"PLATFORM_ID","line":465,"character":12}]}],null,null,null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":469,"character":5},"arguments":[{"__symbolic":"reference","name":"NgxAuthFirebaseUIConfigToken"}]}],null,null],"parameters":[{"__symbolic":"reference","name":"Object"},{"__symbolic":"reference","module":"@angular/fire/auth","name":"AngularFireAuth","line":466,"character":17},{"__symbolic":"reference","name":"AuthProcessService"},{"__symbolic":"reference","module":"@angular/material","name":"MatDialog","line":468,"character":19},{"__symbolic":"reference","name":"NgxAuthFirebaseUIConfig"},{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":470,"character":29},{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":471,"character":18}]}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"onTabChange":[{"__symbolic":"method"}],"signOut":[{"__symbolic":"method"}],"signIn":[{"__symbolic":"method"}],"updateAuthSnackbarMessages":[{"__symbolic":"method"}],"createForgotPasswordTab":[{"__symbolic":"method"}],"processLegalSignUP":[{"__symbolic":"method"}],"signUp":[{"__symbolic":"method"}],"signUpAnonymously":[{"__symbolic":"method"}],"resetPassword":[{"__symbolic":"method"}],"chooseBackUrl":[{"__symbolic":"method"}],"_initSignInFormGroupBuilder":[{"__symbolic":"method"}],"_initSignUpFormGroupBuilder":[{"__symbolic":"method"}],"_initResetPasswordFormGroupBuilder":[{"__symbolic":"method"}],"_afterSignUpMiddleware":[{"__symbolic":"method"}]}},"AuthProvidersComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":18,"character":1},"arguments":[{"selector":"ngx-auth-firebaseui-providers","template":"\n    <div [ngSwitch]=\"theme\" [@animateStagger]=\"{ value: '50' }\">\n\n      <!--default icon buttons-->\n      <div *ngSwitchDefault\n           [fxLayout]=\"layout\"\n           fxLayout.xs=\"column\"\n           [fxLayoutAlign]=\"layout == 'row' ? 'space-around center' : 'stretch'\">\n        <button *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Google)\"\n                [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n                mat-button\n                [ngClass.xs]=\"{'space-full-xs':true}\"\n                (click)=\"authProcess.signInWith(authProvider.Google)\">\n          <mat-icon svgIcon=\"google-colored\"></mat-icon>\n          Google\n        </button>\n        <button *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Facebook)\"\n                [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n                mat-button\n                class=\"facebook-filled\"\n                [ngClass.xs]=\"{'space-full-xs':true}\"\n                (click)=\"authProcess.signInWith(authProvider.Facebook)\">\n          <mat-icon svgIcon=\"facebook\"></mat-icon>\n          Facebook\n        </button>\n        <button *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Twitter)\"\n                [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n                mat-button\n                class=\"twitter-filled\"\n                [ngClass.xs]=\"{'space-full-xs':true}\"\n                (click)=\"authProcess.signInWith(authProvider.Twitter)\">\n          <mat-icon svgIcon=\"twitter\"></mat-icon>\n          Twitter\n        </button>\n        <button *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Github)\"\n                [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n                mat-button\n                [ngClass.xs]=\"{'space-full-xs':true}\"\n                (click)=\"authProcess.signInWith(authProvider.Github)\">\n          <mat-icon svgIcon=\"github\"></mat-icon>\n          GitHub\n        </button>\n        <button *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Microsoft)\"\n                [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n                mat-button\n                [ngClass.xs]=\"{'space-full-xs':true}\"\n                (click)=\"authProcess.signInWith(authProvider.Microsoft)\">\n          <mat-icon svgIcon=\"microsoft\"></mat-icon>\n          Microsoft\n        </button>\n        <button *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Yahoo)\"\n                [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n                mat-button\n                [ngClass.xs]=\"{'space-full-xs':true}\"\n                (click)=\"authProcess.signInWith(authProvider.Yahoo)\">\n          <mat-icon svgIcon=\"yahoo\"></mat-icon>\n          Yahoo\n        </button>\n      </div>\n\n      <!--classic-->\n      <div *ngSwitchCase=\"themes.CLASSIC\"\n           class=\"buttons-classic\"\n           [fxLayout]=\"layout\"\n           fxLayout.xs=\"column\"\n           [fxLayoutAlign]=\"layout == 'row' ? 'space-around center' : 'stretch'\">\n        <button *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Google)\"\n                [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n                mat-button\n                class=\"google-classic\"\n                [ngClass.xs]=\"{'space-full-xs':true}\"\n                (click)=\"authProcess.signInWith(authProvider.Google)\">\n          Google\n        </button>\n        <button *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Facebook)\"\n                [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n                mat-button\n                class=\"facebook-classic\"\n                [ngClass.xs]=\"{'space-full-xs':true}\"\n                (click)=\"authProcess.signInWith(authProvider.Facebook)\">\n          Facebook\n        </button>\n        <button *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Twitter)\"\n                [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n                mat-button\n                class=\"twitter-classic\"\n                [ngClass.xs]=\"{'space-full-xs':true}\"\n                (click)=\"authProcess.signInWith(authProvider.Twitter)\">\n          Twitter\n        </button>\n        <button *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Github)\"\n                [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n                mat-button\n                class=\"github-classic\"\n                [ngClass.xs]=\"{'space-full-xs':true}\"\n                (click)=\"authProcess.signInWith(authProvider.Github)\">\n          GitHub\n        </button>\n        <button *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Microsoft)\"\n                [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n                mat-button\n                class=\"microsoft-classic\"\n                [ngClass.xs]=\"{'space-full-xs':true}\"\n                (click)=\"authProcess.signInWith(authProvider.Microsoft)\">\n          Microsoft\n        </button>\n        <button *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Yahoo)\"\n                [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n                mat-button\n                class=\"yahoo-classic\"\n                [ngClass.xs]=\"{'space-full-xs':true}\"\n                (click)=\"authProcess.signInWith(authProvider.Yahoo)\">\n          Yahoo\n        </button>\n      </div>\n\n      <!--stroked-->\n      <div *ngSwitchCase=\"themes.STROKED\"\n           class=\"buttons-classic\"\n           [fxLayout]=\"layout\"\n           fxLayout.xs=\"column\"\n           [fxLayoutAlign]=\"layout == 'row' ? 'space-around center' : 'stretch'\">\n        <button *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Google)\"\n                [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n                mat-stroked-button\n                class=\"google-classic\"\n                [ngClass.xs]=\"{'space-full-xs':true}\"\n                (click)=\"authProcess.signInWith(authProvider.Google)\">\n          Google\n        </button>\n        <button *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Facebook)\"\n                [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n                mat-stroked-button\n                class=\"facebook-classic\"\n                [ngClass.xs]=\"{'space-full-xs':true}\"\n                (click)=\"authProcess.signInWith(authProvider.Facebook)\">\n          Facebook\n        </button>\n        <button *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Twitter)\"\n                [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n                mat-stroked-button\n                class=\"twitter-classic\"\n                [ngClass.xs]=\"{'space-full-xs':true}\"\n                (click)=\"authProcess.signInWith(authProvider.Twitter)\">\n          Twitter\n        </button>\n        <button *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Github)\"\n                [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n                mat-stroked-button\n                class=\"github-classic\"\n                [ngClass.xs]=\"{'space-full-xs':true}\"\n                (click)=\"authProcess.signInWith(authProvider.Github)\">\n          GitHub\n        </button>\n        <button *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Microsoft)\"\n                [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n                mat-stroked-button\n                class=\"microsoft-classic\"\n                [ngClass.xs]=\"{'space-full-xs':true}\"\n                (click)=\"authProcess.signInWith(authProvider.Microsoft)\">\n          Microsoft\n        </button>\n        <button *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Yahoo)\"\n                [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n                mat-stroked-button\n                class=\"yahoo-classic\"\n                [ngClass.xs]=\"{'space-full-xs':true}\"\n                (click)=\"authProcess.signInWith(authProvider.Yahoo)\">\n          Yahoo\n        </button>\n      </div>\n\n      <!--raised-->\n      <div *ngSwitchCase=\"themes.RAISED\"\n           class=\"buttons-raised\"\n           [fxLayout]=\"layout\"\n           fxLayout.xs=\"column\"\n           [fxLayoutAlign]=\"layout == 'row' ? 'space-around center' : 'stretch'\">\n        <button *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Google)\"\n                [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n                mat-raised-button\n                class=\"google-raised\"\n                [ngClass.xs]=\"{'space-full-xs':true}\"\n                (click)=\"authProcess.signInWith(authProvider.Google)\">\n          Google\n        </button>\n        <button *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Facebook)\"\n                [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n                mat-raised-button\n                class=\"facebook-raised\"\n                [ngClass.xs]=\"{'space-full-xs':true}\"\n                (click)=\"authProcess.signInWith(authProvider.Facebook)\">\n          Facebook\n        </button>\n        <button *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Twitter)\"\n                [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n                mat-raised-button\n                class=\"twitter-raised\"\n                [ngClass.xs]=\"{'space-full-xs':true}\"\n                (click)=\"authProcess.signInWith(authProvider.Twitter)\">\n          Twitter\n        </button>\n        <button *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Github)\"\n                [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n                mat-raised-button\n                class=\"github-raised\"\n                [ngClass.xs]=\"{'space-full-xs':true}\"\n                (click)=\"authProcess.signInWith(authProvider.Github)\">\n          GitHub\n        </button>\n        <button *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Microsoft)\"\n                [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n                mat-raised-button\n                class=\"microsoft-raised\"\n                [ngClass.xs]=\"{'space-full-xs':true}\"\n                (click)=\"authProcess.signInWith(authProvider.Microsoft)\">\n          Microsoft\n        </button>\n        <button *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Yahoo)\"\n                [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n                mat-raised-button\n                class=\"yahoo-raised\"\n                [ngClass.xs]=\"{'space-full-xs':true}\"\n                (click)=\"authProcess.signInWith(authProvider.Yahoo)\">\n          Yahoo\n        </button>\n      </div>\n\n      <!--fab-->\n      <div *ngSwitchCase=\"themes.FAB\"\n           class=\"buttons-raised\"\n           [fxLayout]=\"layout\"\n           [fxLayoutAlign]=\"layout == 'row' ? 'space-around center' : 'stretch'\">\n        <button *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Google)\"\n                [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n                mat-fab\n                class=\"google-raised\"\n                (click)=\"authProcess.signInWith(authProvider.Google)\">\n          <mat-icon svgIcon=\"google\"></mat-icon>\n        </button>\n        <button *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Facebook)\"\n                [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n                mat-fab\n                class=\"facebook-raised\"\n                (click)=\"authProcess.signInWith(authProvider.Facebook)\">\n          <mat-icon svgIcon=\"facebook\"></mat-icon>\n        </button>\n        <button *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Twitter)\"\n                [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n                mat-fab\n                class=\"twitter-raised\"\n                (click)=\"authProcess.signInWith(authProvider.Twitter)\">\n          <mat-icon svgIcon=\"twitter\"></mat-icon>\n        </button>\n        <button *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Github)\"\n                [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n                mat-fab\n                class=\"github-raised\"\n                (click)=\"authProcess.signInWith(authProvider.Github)\">\n          <mat-icon svgIcon=\"github\"></mat-icon>\n        </button>\n        <button *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Microsoft)\"\n                [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n                mat-fab\n                class=\"microsoft\"\n                (click)=\"authProcess.signInWith(authProvider.Microsoft)\">\n          <mat-icon svgIcon=\"microsoft\"></mat-icon>\n        </button>\n        <button *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Yahoo)\"\n                [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n                mat-fab\n                class=\"yahoo-raised\"\n                (click)=\"authProcess.signInWith(authProvider.Yahoo)\">\n          <mat-icon svgIcon=\"yahoo\"></mat-icon>\n        </button>\n      </div>\n\n      <!--mini-fab-->\n      <div *ngSwitchCase=\"themes.MINI_FAB\"\n           class=\"buttons-raised\"\n           [fxLayout]=\"layout\"\n           fxLayoutAlign.xs=\"center center\"\n           [fxLayoutAlign]=\"layout == 'row' ? 'space-around center' : 'stretch'\">\n        <button *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Google)\"\n                [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n                mat-mini-fab\n                class=\"google-raised\"\n                fxFlexAlign=\"center\"\n                (click)=\"authProcess.signInWith(authProvider.Google)\">\n          <mat-icon svgIcon=\"google\"></mat-icon>\n        </button>\n        <button *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Facebook)\"\n                [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n                mat-mini-fab\n                class=\"facebook-raised\"\n                (click)=\"authProcess.signInWith(authProvider.Facebook)\">\n          <mat-icon svgIcon=\"facebook\"></mat-icon>\n        </button>\n        <button *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Twitter)\"\n                [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n                mat-mini-fab\n                class=\"twitter-raised\"\n                (click)=\"authProcess.signInWith(authProvider.Twitter)\">\n          <mat-icon svgIcon=\"twitter\" class=\"icon-white\"></mat-icon>\n        </button>\n        <button *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Github)\"\n                [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n                mat-mini-fab\n                class=\"github-raised\"\n                (click)=\"authProcess.signInWith(authProvider.Github)\">\n          <mat-icon svgIcon=\"github\"></mat-icon>\n        </button>\n        <button *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Microsoft)\"\n                [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n                mat-mini-fab\n                class=\"microsoft\"\n                (click)=\"authProcess.signInWith(authProvider.Microsoft)\">\n          <mat-icon svgIcon=\"microsoft\"></mat-icon>\n        </button>\n        <button *ngIf=\"providers === authProvider.ALL || providers.includes(authProvider.Yahoo)\"\n                [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n                mat-mini-fab\n                class=\"yahoo-raised\"\n                (click)=\"authProcess.signInWith(authProvider.Yahoo)\">\n          <mat-icon svgIcon=\"yahoo\"></mat-icon>\n        </button>\n      </div>\n    </div>\n  ","styles":["\n    :host{display:block}:host .mat-icon{vertical-align:inherit}.space-full-xs{width:100%;margin:.4rem}.facebook-filled mat-icon{fill:#385899}.twitter-filled mat-icon{fill:#1da1f2}.buttons-raised button{color:#fff!important}.buttons-raised .google-raised{background-color:#db4437}.buttons-raised .facebook-raised{background-color:#385899}.buttons-raised .twitter-raised{background-color:#1da1f2}.buttons-raised .github-raised{background-color:#000}.buttons-raised .microsoft-raised{background-color:#0078d4}.buttons-raised .yahoo-raised{background-color:#720e9e}.buttons-raised .phone-raised{background-color:#02bd7e}.buttons-classic button.google-classic{color:#db4437!important}.buttons-classic .facebook-classic{color:#385899!important}.buttons-classic .twitter-classic{color:#1da1f2!important}.buttons-classic .github-classic{color:#000!important}.buttons-classic .microsoft-classic{color:#0078d4!important}.buttons-classic .yahoo-classic{color:#720e9e!important}.buttons-classic .phone-classic{color:#02bd7e}.icon-white{color:#fff}.icon-white mat-icon{fill:#fff}button.microsoft{background:#f8f9fa}\n  "],"animations":{"__symbolic":"reference","name":"ɵc"}}]}],"members":{"theme":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":356,"character":3}}]}],"layout":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":357,"character":3}}]}],"providers":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":358,"character":3}}]}],"onSuccess":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":360,"character":3}}]}],"onError":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":361,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"AuthProcessService"}]}]}},"Layout":{"ROW":"row","COLUMN":"column"},"Theme":{"DEFAULT":"default","CLASSIC":"classic","STROKED":"stroked","FAB":"fab","MINI_FAB":"mini-fab","RAISED":"raised"},"NgxAuthFirebaseuiLoginComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":8,"character":1},"arguments":[{"selector":"ngx-auth-firebaseui-login","template":"\n    <div id=\"login\" fxLayout=\"column\">\n\n      <div id=\"login-form-wrapper\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n\n        <div id=\"login-form\" [@animateStagger]=\"{ value: '50' }\">\n\n          <div *ngIf=\"logoUrl\" class=\"logo\">\n            <img [src]=\"logoUrl\" alt=\"logo\" [@animate]=\"{ value: '*', params: { x: '50px' } }\">\n          </div>\n\n          <div class=\"title\" [@animate]=\"{ value: '*', params: { x: '-50px' } }\">{{titleText}}</div>\n\n          <form name=\"loginForm\" [formGroup]=\"loginForm\" novalidate\n                [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\">\n\n            <mat-form-field [appearance]=\"appearance\" [@animate]=\"{ value: '*', params: { x: '50px' } }\">\n              <input matInput [placeholder]=\"emailText\" formControlName=\"email\">\n              <mat-icon matSuffix [color]=\"color\">email</mat-icon>\n              <mat-error *ngIf=\"loginForm.get('email')?.hasError('required')\">\n                {{emailErrorRequiredText}}\n              </mat-error>\n              <mat-error\n                *ngIf=\"!loginForm.get('email')?.hasError('required') &&\n                                    loginForm.get('email')?.hasError('email')\">\n                {{emailErrorPatternText}}\n              </mat-error>\n            </mat-form-field>\n\n            <mat-form-field [appearance]=\"appearance\" [@animate]=\"{ value: '*', params: { x: '50px' } }\">\n              <input matInput type=\"password\" [placeholder]=\"passwordText\" formControlName=\"password\">\n              <mat-icon matSuffix [color]=\"color\">lock</mat-icon>\n              <mat-error>\n                {{passwordErrorRequiredText}}\n              </mat-error>\n            </mat-form-field>\n\n            <div class=\"remember-forgot-password\"\n                 fxLayout=\"row\" fxLayout.xs=\"column\"\n                 fxLayoutAlign=\"space-between center\"\n                 [@animate]=\"{ value: '*', params: { x: '50px' } }\">\n    <!--          <mat-checkbox class=\"remember-me\" aria-label=\"Remember Me\">-->\n    <!--            {{rememberMeText}}-->\n    <!--          </mat-checkbox>-->\n\n              <button *ngIf=\"resetPasswordEnabled\"\n                      [@animate]=\"{ value: '*', params: { x: '-50px' } }\"\n                      mat-button\n                      class=\"forgot-password\"\n                      [color]=\"color\"\n                      type=\"button\"\n                      (click)=\"onResetPasswordRequested.emit()\">\n                {{forgotPasswordText}}\n              </button>\n            </div>\n\n            <button mat-raised-button\n                    id=\"loginButton\"\n                    [color]=\"colorAccent\"\n                    class=\"submit-button\"\n                    aria-label=\"LOG IN\"\n                    [disabled]=\"loginForm.invalid\"\n                    (click)=\"login()\">\n              {{loginButtonText}}\n            </button>\n\n          </form>\n\n          <div *ngIf=\"providers.length > 0\"\n               class=\"separator\"\n               [@animate]=\"{ value: '*', params: { z: '50px', delay: '50ms', scale: '0.2' } }\">\n            <span class=\"text\">{{orLabelText}}</span>\n          </div>\n\n          <ngx-auth-firebaseui-providers layout=\"column\"\n                                         fxLayoutAlign=\"center center\"\n                                         theme=\"raised\"\n                                         [providers]=\"providers\"></ngx-auth-firebaseui-providers>\n\n          <div *ngIf=\"registrationEnabled\"\n               [@animateStagger]=\"{ value: '100' }\"\n               class=\"register\"\n               fxLayout=\"column\" fxLayoutAlign=\"center center\">\n            <span class=\"text\" [@animate]=\"{ value: '*', params: { x: '100px' } }\">\n              {{dontHaveAnAccountText}}\n            </span>\n            <button [@animate]=\"{ value: '*', params: { x: '-100px' } }\"\n                    mat-button\n                    id=\"createAccountButton\"\n                    [color]=\"color\"\n                    type=\"button\"\n                    (click)=\"onCreateAccountRequested.emit()\">{{createAccountButtonText}}</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  ","styles":["\n    ngx-auth-firebaseui-login #login-form-wrapper{-webkit-box-flex:1;flex:1 0 auto;padding:32px}@media screen and (max-width:599px){ngx-auth-firebaseui-login #login-form-wrapper{padding:16px}}ngx-auth-firebaseui-login #login-form-wrapper #login-form{width:384px;max-width:384px;padding:32px;text-align:center}@media screen and (max-width:599px){ngx-auth-firebaseui-login #login-form-wrapper #login-form{padding:24px;width:100%}}ngx-auth-firebaseui-login #login-form-wrapper #login-form .logo{width:150px;height:150px;margin:32px auto}ngx-auth-firebaseui-login #login-form-wrapper #login-form .title{font-size:20px;margin:16px 0 32px}ngx-auth-firebaseui-login #login-form-wrapper #login-form form{width:100%;text-align:left}ngx-auth-firebaseui-login #login-form-wrapper #login-form form mat-form-field{width:100%}ngx-auth-firebaseui-login #login-form-wrapper #login-form form mat-checkbox{margin:0}ngx-auth-firebaseui-login #login-form-wrapper #login-form form .remember-forgot-password{font-size:13px;margin-top:8px}ngx-auth-firebaseui-login #login-form-wrapper #login-form form .remember-forgot-password .remember-me{margin-bottom:16px}ngx-auth-firebaseui-login #login-form-wrapper #login-form form .remember-forgot-password .forgot-password{font-size:13px;font-weight:500;margin-bottom:16px}ngx-auth-firebaseui-login #login-form-wrapper #login-form form .submit-button{width:220px;margin:16px auto;display:block}@media screen and (max-width:599px){ngx-auth-firebaseui-login #login-form-wrapper #login-form form .submit-button{width:90%}}ngx-auth-firebaseui-login #login-form-wrapper #login-form .register{margin:32px auto 24px;font-weight:500}ngx-auth-firebaseui-login #login-form-wrapper #login-form .register .text{margin-right:8px}ngx-auth-firebaseui-login #login-form-wrapper #login-form .separator{font-size:15px;font-weight:600;margin:24px auto;position:relative;overflow:hidden;width:100px}ngx-auth-firebaseui-login #login-form-wrapper #login-form .separator .text{display:-webkit-inline-box;display:inline-flex;position:relative;padding:0 8px;z-index:9999}ngx-auth-firebaseui-login #login-form-wrapper #login-form .separator .text:after,ngx-auth-firebaseui-login #login-form-wrapper #login-form .separator .text:before{content:\"\";display:block;width:30px;position:absolute;top:10px;border-top:1px solid}ngx-auth-firebaseui-login #login-form-wrapper #login-form .separator .text:before{right:100%}ngx-auth-firebaseui-login #login-form-wrapper #login-form .separator .text:after{left:100%}ngx-auth-firebaseui-login #login-form-wrapper #login-form button.facebook-raised,ngx-auth-firebaseui-login #login-form-wrapper #login-form button.github-raised,ngx-auth-firebaseui-login #login-form-wrapper #login-form button.google-raised,ngx-auth-firebaseui-login #login-form-wrapper #login-form button.microsoft-raised,ngx-auth-firebaseui-login #login-form-wrapper #login-form button.twitter-raised,ngx-auth-firebaseui-login #login-form-wrapper #login-form button.yahoo-raised{width:192px;text-transform:none;color:#fff;font-size:13px;margin-bottom:8px}@media screen and (max-width:599px){ngx-auth-firebaseui-login #login-form-wrapper #login-form button{width:80%}}\n  "],"encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":110,"character":17},"member":"None"},"animations":{"__symbolic":"reference","name":"ɵc"}}]}],"members":{"logoUrl":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":115,"character":3}}]}],"providers":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":116,"character":3}}]}],"appearance":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":117,"character":3}}]}],"registrationEnabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":118,"character":3}}]}],"resetPasswordEnabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":119,"character":3}}]}],"messageOnAuthSuccess":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":120,"character":3}}]}],"messageOnAuthError":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":121,"character":3}}]}],"titleText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":124,"character":3}}]}],"rememberMeText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":125,"character":3}}]}],"loginButtonText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":126,"character":3}}]}],"orLabelText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":127,"character":3}}]}],"forgotPasswordText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":128,"character":3}}]}],"dontHaveAnAccountText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":129,"character":3}}]}],"createAccountButtonText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":130,"character":3}}]}],"emailText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":133,"character":3}}]}],"emailErrorRequiredText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":134,"character":3}}]}],"emailErrorPatternText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":135,"character":3}}]}],"passwordText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":138,"character":3}}]}],"passwordErrorRequiredText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":139,"character":3}}]}],"onSuccess":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":142,"character":3}}]}],"onError":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":143,"character":3}}]}],"onCreateAccountRequested":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":144,"character":3}}]}],"onResetPasswordRequested":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":145,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":153,"character":5},"arguments":[{"__symbolic":"reference","module":"@angular/core","name":"PLATFORM_ID","line":153,"character":12}]}],null,null],"parameters":[{"__symbolic":"reference","name":"Object"},{"__symbolic":"reference","name":"AuthProcessService"},{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":155,"character":26}]}],"ngOnInit":[{"__symbolic":"method"}],"updateAuthSnackbarMessages":[{"__symbolic":"method"}],"login":[{"__symbolic":"method"}]}},"NgxAuthFirebaseuiRegisterComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":33,"character":1},"arguments":[{"selector":"ngx-auth-firebaseui-register","template":"\n    <div id=\"register\" fxLayout=\"column\">\n\n      <div id=\"register-form-wrapper\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n\n        <div id=\"register-form\" [@animateStagger]=\"{ value: '50' }\">\n\n          <div *ngIf=\"logoUrl\" class=\"logo\">\n            <img [src]=\"logoUrl\" alt=\"logo\" [@animate]=\"{ value: '*', params: { x: '50px' } }\">\n          </div>\n\n          <div class=\"title\" [@animate]=\"{ value: '*', params: { x: '-50px' } }\">{{titleText}}</div>\n\n          <form [formGroup]=\"registerForm\" name=\"registerForm\" novalidate\n                [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\">\n\n            <mat-form-field [appearance]=\"appearance\" [@animate]=\"{ value: '*', params: { x: '50px' } }\">\n              <input formControlName=\"name\" matInput [placeholder]=\"nameText\"/>\n              <mat-icon matSuffix [color]=\"color\">person</mat-icon>\n              <mat-error>\n                {{nameErrorRequiredText}}\n              </mat-error>\n            </mat-form-field>\n\n            <mat-form-field [appearance]=\"appearance\" [@animate]=\"{ value: '*', params: { x: '50px' } }\">\n              <input formControlName=\"email\" matInput [placeholder]=\"emailText\"/>\n              <mat-icon matSuffix [color]=\"color\">email</mat-icon>\n              <mat-error *ngIf=\"registerForm.get('email')?.hasError('required')\">\n                {{emailErrorRequiredText}}\n              </mat-error>\n              <mat-error *ngIf=\"registerForm.get('email')?.hasError('email')\">\n                {{emailErrorPatternText}}\n              </mat-error>\n            </mat-form-field>\n\n            <mat-form-field [appearance]=\"appearance\" [@animate]=\"{ value: '*', params: { x: '50px' } }\">\n              <input formControlName=\"password\" matInput [placeholder]=\"passwordText\" type=\"password\"/>\n              <mat-icon matSuffix [color]=\"color\">lock</mat-icon>\n              <mat-error>\n                {{passwordErrorRequiredText}}\n              </mat-error>\n            </mat-form-field>\n\n            <mat-form-field [appearance]=\"appearance\" [@animate]=\"{ value: '*', params: { x: '50px' } }\">\n              <input formControlName=\"passwordConfirm\" matInput [placeholder]=\"passwordConfirmationText\" type=\"password\"/>\n              <mat-icon matSuffix [color]=\"color\">lock</mat-icon>\n              <mat-error *ngIf=\"registerForm.get('passwordConfirm')?.hasError('required')\">\n                {{passwordConfirmationErrorRequiredText}}\n              </mat-error>\n              <mat-error\n                *ngIf=\"\n                  !registerForm.get('passwordConfirm')?.hasError('required') &&\n                  registerForm.get('passwordConfirm')?.hasError('passwordsNotMatching')\n                \">\n                {{passwordErrorMatchText}}\n              </mat-error>\n            </mat-form-field>\n\n            <!--        <div *ngIf=\"this.tosUrl || this.privacyPolicyUrl\"-->\n            <!--        <div-->\n            <!--          class=\"terms\"-->\n            <!--          fxLayout=\"row\" fxLayoutAlign=\"center center\"-->\n            <!--          [@animate]=\"{value:'*',params:{duration:'250ms',y:'100px'}}\">-->\n            <!--          <mat-checkbox aria-label=\"I read and accept\" name=\"terms\" required>-->\n            <!--            <span>{{readAncAcceptText}}</span>-->\n            <!--            <span>&nbsp;</span>-->\n            <!--            <a target=\"_blank\"-->\n            <!--               [href]=\"this.tosUrl\">-->\n            <!--              Terms of Service and Conditions-->\n            <!--            </a>-->\n            <!--          </mat-checkbox>-->\n            <!--        </div>-->\n\n            <button mat-raised-button\n                    id=\"createAccountButton\"\n                    class=\"submit-button\"\n                    aria-label=\"CREATE AN ACCOUNT\"\n                    [color]=\"colorAccent\"\n                    [disabled]=\"registerForm.invalid\"\n                    (click)=\"createAccount()\">\n              {{createAccountButtonText}}\n            </button>\n          </form>\n\n          <div class=\"register\" fxLayout=\"column\" fxLayoutAlign=\"center center\"\n               [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\">\n            <span class=\"text\" [@animate]=\"{ value: '*', params: { x: '100px' } }\">\n              {{alreadyHaveAccountText}}\n            </span>\n            <button mat-button\n                    id=\"loginButton\"\n                    type=\"button\"\n                    [color]=\"colorAccent\"\n                    (click)=\"onLoginRequested.emit()\"\n                    [@animate]=\"{ value: '*', params: { x: '-100px' } }\">\n              {{loginButtonText}}\n            </button>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  ","styles":["\n    ngx-auth-firebaseui-register #register{width:100%;background-size:cover}ngx-auth-firebaseui-register #register #register-form-wrapper{-webkit-box-flex:1;flex:1 0 auto;padding:32px}@media screen and (max-width:599px){ngx-auth-firebaseui-register #register #register-form-wrapper{padding:16px}}ngx-auth-firebaseui-register #register #register-form-wrapper #register-form{width:384px;max-width:384px;padding:32px;text-align:center}@media screen and (max-width:599px){ngx-auth-firebaseui-register #register #register-form-wrapper #register-form{padding:24px;width:100%}}ngx-auth-firebaseui-register #register #register-form-wrapper #register-form .logo{width:128px;margin:32px auto}ngx-auth-firebaseui-register #register #register-form-wrapper #register-form .title{font-size:20px;margin:16px 0 32px}ngx-auth-firebaseui-register #register #register-form-wrapper #register-form form{width:100%;text-align:left}ngx-auth-firebaseui-register #register #register-form-wrapper #register-form form mat-form-field{width:100%}ngx-auth-firebaseui-register #register #register-form-wrapper #register-form form mat-checkbox{margin:0}ngx-auth-firebaseui-register #register #register-form-wrapper #register-form form .terms{margin:16px 0 32px}ngx-auth-firebaseui-register #register #register-form-wrapper #register-form form .terms a{font-size:16px;margin-left:4px}ngx-auth-firebaseui-register #register #register-form-wrapper #register-form form .submit-button{width:220px;margin:16px auto;display:block}@media screen and (max-width:599px){ngx-auth-firebaseui-register #register #register-form-wrapper #register-form form .submit-button{width:90%}}ngx-auth-firebaseui-register #register #register-form-wrapper #register-form .register{margin:32px auto 24px;font-weight:500}ngx-auth-firebaseui-register #register #register-form-wrapper #register-form .register .text{margin-right:8px}ngx-auth-firebaseui-register #register #register-form-wrapper #register-form .separator{font-size:15px;font-weight:600;margin:24px auto;position:relative;overflow:hidden;width:100px}ngx-auth-firebaseui-register #register #register-form-wrapper #register-form .separator .text{display:-webkit-inline-box;display:inline-flex;position:relative;padding:0 8px;z-index:9999}ngx-auth-firebaseui-register #register #register-form-wrapper #register-form .separator .text:after,ngx-auth-firebaseui-register #register #register-form-wrapper #register-form .separator .text:before{content:\"\";display:block;width:30px;position:absolute;top:10px;border-top:1px solid}ngx-auth-firebaseui-register #register #register-form-wrapper #register-form .separator .text:before{right:100%}ngx-auth-firebaseui-register #register #register-form-wrapper #register-form .separator .text:after{left:100%}ngx-auth-firebaseui-register #register #register-form-wrapper #register-form button.facebook,ngx-auth-firebaseui-register #register #register-form-wrapper #register-form button.google{width:192px;text-transform:none;color:#fff;font-size:13px}@media screen and (max-width:599px){ngx-auth-firebaseui-register #register #register-form-wrapper #register-form button{width:80%}}ngx-auth-firebaseui-register #register #register-form-wrapper #register-form button.google{background-color:#d73d32;margin-bottom:8px}ngx-auth-firebaseui-register #register #register-form-wrapper #register-form button.facebook{background-color:#3f5c9a}ngx-auth-firebaseui-register ::ng-deep .mat-checkbox-label{display:-webkit-box;display:flex;flex-wrap:wrap}\n  "],"encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":141,"character":17},"member":"None"},"animations":{"__symbolic":"reference","name":"ɵc"}}]}],"members":{"logoUrl":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":146,"character":3}}]}],"appearance":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":147,"character":3}}]}],"tosUrl":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":148,"character":3}}]}],"privacyPolicyUrl":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":149,"character":3}}]}],"titleText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":152,"character":3}}]}],"readAncAcceptText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":153,"character":3}}]}],"termsAndConditionsText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":154,"character":3}}]}],"createAccountButtonText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":155,"character":3}}]}],"alreadyHaveAccountText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":156,"character":3}}]}],"loginButtonText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":157,"character":3}}]}],"nameText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":160,"character":3}}]}],"nameErrorRequiredText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":161,"character":3}}]}],"emailText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":164,"character":3}}]}],"emailErrorRequiredText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":165,"character":3}}]}],"emailErrorPatternText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":166,"character":3}}]}],"passwordText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":169,"character":3}}]}],"passwordErrorRequiredText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":170,"character":3}}]}],"passwordConfirmationText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":171,"character":3}}]}],"passwordConfirmationErrorRequiredText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":172,"character":3}}]}],"passwordErrorMatchText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":173,"character":3}}]}],"onSuccess":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":176,"character":3}}]}],"onError":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":177,"character":3}}]}],"onLoginRequested":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":178,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":187,"character":15},"arguments":[{"__symbolic":"reference","module":"@angular/core","name":"PLATFORM_ID","line":187,"character":22}]}],null,null],"parameters":[{"__symbolic":"reference","name":"Object"},{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":188,"character":36},{"__symbolic":"reference","name":"AuthProcessService"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"createAccount":[{"__symbolic":"method"}]}},"LoggedInGuard":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":6,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":11,"character":5},"arguments":[{"__symbolic":"reference","name":"NgxAuthFirebaseUIConfigToken"}]}],null,null],"parameters":[{"__symbolic":"reference","name":"NgxAuthFirebaseUIConfig"},{"__symbolic":"reference","module":"@angular/router","name":"Router","line":13,"character":20},{"__symbolic":"reference","name":"AuthProcessService"}]}],"canActivate":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"NgxAuthFirebaseUIConfig":{"__symbolic":"interface"},"AuthProcessService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":42,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":64,"character":5},"arguments":[{"__symbolic":"reference","name":"NgxAuthFirebaseUIConfigToken"}]}],null,null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":67,"character":5},"arguments":[{"__symbolic":"reference","module":"@angular/material","name":"MAT_SNACK_BAR_DEFAULT_OPTIONS","line":67,"character":12}]}]],"parameters":[{"__symbolic":"reference","module":"@angular/fire/auth","name":"AngularFireAuth","line":63,"character":16},{"__symbolic":"reference","name":"NgxAuthFirebaseUIConfig"},{"__symbolic":"reference","module":"@angular/material","name":"MatSnackBar","line":65,"character":23},{"__symbolic":"reference","name":"FirestoreSyncService"},{"__symbolic":"reference","module":"@angular/material","name":"MatSnackBarConfig","line":67,"character":71}]}],"listenToUserEvents":[{"__symbolic":"method"}],"resetPassword":[{"__symbolic":"method"}],"signInWith":[{"__symbolic":"method"}],"signUp":[{"__symbolic":"method"}],"sendNewVerificationEmail":[{"__symbolic":"method"}],"signOut":[{"__symbolic":"method"}],"updateProfile":[{"__symbolic":"method"}],"deleteAccount":[{"__symbolic":"method"}],"parseUserInfo":[{"__symbolic":"method"}],"getUserPhotoUrl":[{"__symbolic":"method"}],"getPhotoPath":[{"__symbolic":"method"}],"signInWithPhoneNumber":[{"__symbolic":"method"}],"handleSuccess":[{"__symbolic":"method"}],"handleError":[{"__symbolic":"method"}],"reloadUserInfo":[{"__symbolic":"method"}],"getMessageOnAuthError":[{"__symbolic":"method"}],"showToast":[{"__symbolic":"method"}],"showErrorToast":[{"__symbolic":"method"}],"notifyError":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"AuthProvider":{"ALL":"all","ANONYMOUS":"anonymous","EmailAndPassword":"firebase","Google":"google","Facebook":"facebook","Twitter":"twitter","Github":"github","Microsoft":"microsoft","Yahoo":"yahoo","PhoneNumber":"phoneNumber"},"FirestoreSyncService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":8,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/fire/firestore","name":"AngularFirestore","line":13,"character":26}]}],"getUserDocRefByUID":[{"__symbolic":"method"}],"deleteUserData":[{"__symbolic":"method"}],"updateUserData":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"ɵc":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"trigger","line":24,"character":2},"arguments":["animate",[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"transition","line":24,"character":22},"arguments":["void => *",[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"useAnimation","line":24,"character":47},"arguments":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"animation","line":2,"character":24},"arguments":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"style","line":4,"character":4},"arguments":[{"opacity":"{{opacity}}","transform":"scale({{scale}}) translate3d({{x}}, {{y}}, {{z}})"}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"animate","line":8,"character":4},"arguments":["{{duration}} {{delay}} cubic-bezier(0.0, 0.0, 0.2, 1)",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"style","line":8,"character":69},"arguments":["*"]}]}],{"params":{"duration":"200ms","delay":"0ms","opacity":"0","scale":"1","x":"0","y":"0","z":"0"}}]}]}]]}]]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"trigger","line":26,"character":2},"arguments":["animateStagger",[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"state","line":27,"character":4},"arguments":["50",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"style","line":27,"character":16},"arguments":["*"]}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"state","line":28,"character":4},"arguments":["100",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"style","line":28,"character":17},"arguments":["*"]}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"state","line":29,"character":4},"arguments":["200",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"style","line":29,"character":17},"arguments":["*"]}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"transition","line":31,"character":4},"arguments":["void => 50",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"query","line":31,"character":29},"arguments":["@*",[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"stagger","line":31,"character":42},"arguments":["50ms",[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"animateChild","line":31,"character":59}}]]}],{"optional":true}]}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"transition","line":32,"character":4},"arguments":["void => 100",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"query","line":32,"character":30},"arguments":["@*",[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"stagger","line":32,"character":43},"arguments":["100ms",[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"animateChild","line":32,"character":61}}]]}],{"optional":true}]}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"transition","line":33,"character":4},"arguments":["void => 200",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"query","line":33,"character":30},"arguments":["@*",[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"stagger","line":33,"character":43},"arguments":["200ms",[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"animateChild","line":33,"character":61}}]]}],{"optional":true}]}]}]]}],"ɵd":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":23,"character":1},"arguments":[{"selector":"ngx-auth-firebaseui-email-confirmation","template":"\n    <ng-container *ngTemplateOutlet=\"verifyEmailTemplate; context: verifyEmailContext\"></ng-container>\n    <ng-template #defaultVerifyEmail let-email=\"email\" let-goBackURL=\"goBackURL\" let-verifyEmailTitleText=\"verifyEmailTitleText\" let-verifyEmailConfirmationText=\"verifyEmailConfirmationText\" let-verifyEmailGoBackText=\"verifyEmailGoBackText\" let-signOutText=\"signOutText\" let-sendNewVerificationEmailText=\"sendNewVerificationEmailText\">\n      <mat-card class=\"verify-email\">\n        <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"center center\">\n          <mat-icon>email</mat-icon>\n          <p class=\"title\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n              <span class=\"mat-subheading-2\">{{ verifyEmailTitleText }}</span>\n              <span class=\"mat-body-2\">{{ email }}</span>\n            </p>\n            <p class=\"subtitle\">{{ verifyEmailConfirmationText }}</p>\n            <mat-progress-bar *ngIf=\"isLoading\" mode=\"indeterminate\"></mat-progress-bar>\n        </mat-card-content>\n        <mat-card-actions fxLayout=\"column\" fxLayoutAlign=\"center center\">\n          <button *ngIf=\"goBackURL\" mat-stroked-button (click)=\"continue()\" class=\"go-back-button action-button\">\n            {{ verifyEmailGoBackText }}\n          </button>\n          <button mat-stroked-button (click)=\"sendNewVerificationEmail()\" class=\"send-new-mail-button action-button\">{{ sendNewVerificationEmailText }}</button>\n          <button mat-stroked-button color=\"warn\" (click)=\"this.signOut.emit()\" class=\"sign-out-button action-button\">{{ signOutText }}</button>\n        </mat-card-actions>\n      </mat-card>\n    </ng-template>\n  ","styles":["\n    .material-icons{font-size:4rem}.verify-email{width:360px}.verify-email .mat-icon{height:4rem;width:4rem;color:#444}.verify-email .title{margin-top:16px}.verify-email .title .mat-subheading-2{margin-bottom:0}.verify-email .subtitle{margin:16px auto;text-align:justify}.verify-email p{display:block;-webkit-margin-before:1em;-webkit-margin-after:1em;-webkit-margin-start:0;-webkit-margin-end:0}.verify-email mat-card-actions{text-align:center;margin-top:1rem}.verify-email mat-card-actions .action-button{width:100%}.verify-email mat-card-actions .action-button+.action-button{margin-top:1rem}\n  "],"changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":51,"character":19},"member":"OnPush"}}]}],"members":{"email":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":55,"character":3}}]}],"goBackURL":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":56,"character":3}}]}],"verifyEmailTitleText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":58,"character":3}}]}],"verifyEmailConfirmationText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":59,"character":3}}]}],"verifyEmailGoBackText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":60,"character":3}}]}],"sendNewVerificationEmailText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":61,"character":3}}]}],"signOutText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":62,"character":3}}]}],"messageOnEmailConfirmationSuccess":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":63,"character":3}}]}],"template":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":66,"character":3}}]}],"signOut":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":68,"character":3}}]}],"defaultTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":77,"character":3},"arguments":["defaultVerifyEmail",{"static":true}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"AuthProcessService"},{"__symbolic":"reference","module":"@angular/router","name":"Router","line":79,"character":71},{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":79,"character":93}]}],"ngOnChanges":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"continue":[{"__symbolic":"method"}],"sendNewVerificationEmail":[{"__symbolic":"method"}],"createTemplateContext":[{"__symbolic":"method"}]}},"ɵe":{"__symbolic":"interface"}},"origins":{"ɵa":"./module/interfaces/config.interface","ɵb":"./module/interfaces/config.interface","NgxAuthFirebaseUIConfigToken":"./module/ngx-auth-firebase-u-i.module","UserProvidedConfigToken":"./module/ngx-auth-firebase-u-i.module","NgxAuthFirebaseUIModule":"./module/ngx-auth-firebase-u-i.module","LegalityDialogComponent":"./module/components/legality-dialog/legality-dialog.component","LinkMenuItem":"./module/components/ngx-auth-firebaseui-avatar/ngx-auth-firebaseui-avatar.component","NgxAuthFirebaseuiAvatarComponent":"./module/components/ngx-auth-firebaseui-avatar/ngx-auth-firebaseui-avatar.component","UserComponent":"./module/components/ngx-auth-firebaseui-user/user.component","AuthComponent":"./module/components/ngx-auth-firebaseui/auth.component","AuthProvidersComponent":"./module/components/providers/auth.providers.component","Layout":"./module/components/providers/auth.providers.component","Theme":"./module/components/providers/auth.providers.component","NgxAuthFirebaseuiLoginComponent":"./module/components/ngx-auth-firebaseui-login/ngx-auth-firebaseui-login.component","NgxAuthFirebaseuiRegisterComponent":"./module/components/ngx-auth-firebaseui-register/ngx-auth-firebaseui-register.component","LoggedInGuard":"./module/guards/logged-in.guard","NgxAuthFirebaseUIConfig":"./module/interfaces/config.interface","AuthProcessService":"./module/services/auth-process.service","AuthProvider":"./module/services/auth-process.service","FirestoreSyncService":"./module/services/firestore-sync.service","ɵc":"./module/animations","ɵd":"./module/components/email-confirmation/email-confirmation.component","ɵe":"./module/interfaces/legality.dialog.intreface"},"importAs":"ngx-auth-firebaseui"}